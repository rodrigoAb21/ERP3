DROP DATABASE IF EXISTS erp3;
create database erp3;
use erp3;


CREATE TABLE empleado (
    id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    ci VARCHAR(255) NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    direccion VARCHAR(255),
    ocupacion VARCHAR(255),
    telefono VARCHAR(255) NOT NULL,
    tipo VARCHAR(255) NOT NULL,
    idEmpresa INT
);


CREATE TABLE categoria_cliente (
    id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    descripcion VARCHAR(255),
    puntosRequeridos INT NOT NULL,
    frecuenciaRequerida INT NOT NULL,
    montoRequerido INT NOT NULL,
    cantDiasReserva INT NOT NULL,
    cantProdReserva INT NOT NULL,
    idEmpresa INT NOT NULL
);

CREATE TABLE cliente (
    id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    ci INT,
    nit INT,
    nombre VARCHAR(255) NOT NULL,
    puntosAcumulados INT NOT NULL,
    direccion VARCHAR(255),
    email VARCHAR(255),
    tipo VARCHAR(255) NOT NULL,
    idCategoria INT,
    visible char NOT NULL,
    idEmpresa INT NOT NULL
);


alter table cliente add FOREIGN KEY (idCategoria) REFERENCES categoria_cliente (id);

CREATE TABLE users (
    id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    remember_token VARCHAR(100),
    tipo VARCHAR(255) NOT NULL,
    idEmpresa INT,
    idEmpleado INT,
    idCliente INT,
    color VARCHAR(255) NOT NULL DEFAULT 'Morado',
    fondo VARCHAR(255) NOT NULL DEFAULT 'Oscuro',
    fuente VARCHAR(255) NOT NULL DEFAULT 'Default',
    created_at TIMESTAMP NULL,
    updated_at TIMESTAMP NULL
);

alter table users add foreign key(idEmpleado) references empleado(id);
alter table users add foreign key(idCliente) references cliente(id);

CREATE TABLE empresa (
    id INT AUTO_INCREMENT NOT NULL,
    nit VARCHAR(255),
    nombre VARCHAR(255) NOT NULL,
    direccion VARCHAR(255),
    telefono VARCHAR(255),
    email VARCHAR(255),
    idEmpleado INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (idEmpleado)
        REFERENCES empleado (id)
        ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE bitacora (
    id INT AUTO_INCREMENT NOT NULL,
    fechaEntrada DATETIME NOT NULL,
    user_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id)
        REFERENCES users (id)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE accion (
    id INT AUTO_INCREMENT NOT NULL,
    accion VARCHAR(30) NOT NULL,
    fecha DATETIME NOT NULL,
    tabla VARCHAR(30) NOT NULL,
    tupla INT NOT NULL,
    bitacora_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (bitacora_id)
        REFERENCES bitacora (id)
        ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE promocion (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    fechaEmpieza DATE NOT NULL,
    fechaTermina DATE NOT NULL,
    visible INT NOT NULL,
    PRIMARY KEY (id)
);
CREATE TABLE producto (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    especificacion VARCHAR(100) NOT NULL,
    garantia VARCHAR(100) NOT NULL,
    puntosEquivale INT NOT NULL,
    puntosPorVenta INT NOT NULL,
    precioUCompra DECIMAL(8 , 2 ) NOT NULL,
    precioUVenta DECIMAL(8 , 2 ) NOT NULL,
    precionActual DECIMAL(8 , 2 ) NOT NULL,
    categoria_id INT NOT NULL,
    visible INT,
    PRIMARY KEY (id)
);
CREATE TABLE detalle_promo (
    promo INT,
    producto INT,
    cantidad INT,
    visible INT,
    PRIMARY KEY (promo , producto),
    FOREIGN KEY (promo)
        REFERENCES promocion (id)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (producto)
        REFERENCES producto (id)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE beneficio (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    descripcion VARCHAR(200),
    PRIMARY KEY (id),
    visible INT NOT NULL
);
ALTER TABLE categoria_cliente
    add COLUMN visible int not null;

CREATE TABLE categoria_beneficio (
    beneficio INT,
    categoria INT,
    PRIMARY KEY (beneficio , categoria),
    visible INT NOT NULL,
    FOREIGN KEY (beneficio)
        REFERENCES beneficio (id)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (categoria)
        REFERENCES categoria_cliente (id)
        ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE tarea (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    descripcion VARCHAR(255),
    visible CHAR NOT NULL,
    PRIMARY KEY (id)
);


CREATE TABLE estado (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    descripcion VARCHAR(255)
);


CREATE TABLE seguimiento (
    id INT AUTO_INCREMENT NOT NULL,
    fechaInicio DATE NOT NULL,
    idEstado INT NOT NULL,
    idCliente INT NOT NULL,
    idEmpleado INT NOT NULL,
    visible CHAR NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (idEstado)
        REFERENCES estado (id)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (idCliente)
        REFERENCES cliente (id)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (idEmpleado)
        REFERENCES empleado (id)
        ON DELETE CASCADE ON UPDATE CASCADE
);
--GESTION DE PERMISOS-------------------------------------------------------------
create table departamentos(
id int unsigned primary key,
nombre varchar(50) not null
);

CREATE TABLE casousos(
id int unsigned AUTO_INCREMENT PRIMARY KEY,
nombre varchar(50) not null,
depto_id int unsigned,
FOREIGN KEY(depto_id) REFERENCES departamentos(id)
);

CREATE TABLE roles(
id int unsigned AUTO_INCREMENT PRIMARY KEY,
nombre varchar(50) not null
);
alter table empleado add column rol_id int unsigned;
alter table empleado add foreign key(rol_id) references roles(id);


CREATE TABLE permisos(
rol_id int unsigned ,
casouso_id int unsigned ,
leer int DEFAULT 0,
crear int DEFAULT 0,
editar int DEFAULT 0,
eliminar int DEFAULT 0,
FOREIGN KEY(rol_id) REFERENCES roles(id),
FOREIGN KEY(casouso_id) REFERENCES casousos(id),
    PRIMARY KEY(rol_id,casouso_id)
);
--Departamentos
INSERT INTO `departamentos` (`id`, `nombre`) VALUES (1, 'SEGURIDAD');
INSERT INTO `departamentos` (`id`, `nombre`) VALUES (2, 'COMPRAS');
INSERT INTO `departamentos` (`id`, `nombre`) VALUES (3, 'VENTAS');
INSERT INTO `departamentos` (`id`, `nombre`) VALUES (4, 'CRM');
INSERT INTO `departamentos` (`id`, `nombre`) VALUES (5, 'REPORTES');
--Roles
INSERT INTO `roles` (`id`, `nombre`) VALUES (NULL, 'ADMINISTRADOR');
INSERT INTO `roles` (`id`, `nombre`) VALUES (NULL, 'ENCARGADO');
INSERT INTO `roles` (`id`, `nombre`) VALUES (NULL, 'AGENTE');
INSERT INTO `roles` (`id`, `nombre`) VALUES (NULL, 'EMPLEADO');
INSERT INTO `roles` (`id`, `nombre`) VALUES (NULL, 'CLIENTE');
-----------------------------------------------------------------------------------------
INSERT INTO `casousos` (`id`, `nombre`, `depto_id`) VALUES ('1', 'ver Bitacora', '1');
INSERT INTO `casousos` (`id`, `nombre`, `depto_id`) VALUES ('2', 'Gest. Datos de Empresa', '1');
INSERT INTO `casousos` (`id`, `nombre`, `depto_id`) VALUES ('3', 'Gest. Empleados', '1');
INSERT INTO `casousos` (`id`, `nombre`, `depto_id`) VALUES ('4', 'Gest. Datos de Empresa', '1');